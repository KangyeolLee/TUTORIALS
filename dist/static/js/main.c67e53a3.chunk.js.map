{"version":3,"sources":["components/hoc/thumbnailColor.js","components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SinedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/projects/DeleteProject.js","store/actions/projectActions.js","components/projects/UpdateProject.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["thumbnailColor","WrappedComponent","colors","randomColor","Math","floor","random","length","props","react_default","a","createElement","Object","assign","color","connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","SinedOutLinks","Notifications","notifications","map","noti","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","pathname","projectId","concat","match","params","authorId","projectTitle","projectContent","ownProps","data","DeleteProject","userId","_this","email","userPassword","docId","location","handleChange","e","setState","target","value","handleSubmit","preventDefault","deleteProject","onSubmit","htmlFor","onChange","getFirestore","signInWithEmailAndPassword","doc","delete","history","push","catch","err","UpdateProject","updateProject","defineProperty","checkActiveLabel","_ref3","update","updatedAt","FieldValue","serverTimestamp","SignIn","password","signIn","authError","creds","credentials","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","res","set","CreateProject","createProject","add","objectSpread","Date","App","layout_Navbar","exact","path","component","Boolean","window","hostname","initState","authReducer","arguments","undefined","action","console","log","message","projectReducer","alert","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c67e53a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst thumbnailColor = (WrappedComponent) => {\r\n  const colors = ['red', 'pink', 'orange', 'blue', 'green', 'yellow'];\r\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n  return (props) => {\r\n    return (\r\n        <WrappedComponent {...props} color={randomColor} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default thumbnailColor;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authAction';\r\nimport thumbnailColor from '../hoc/thumbnailColor';\r\n\r\nconst SignedInLinks = (props) => {\r\n  const { color } = props;\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log Out</a></li>\r\n      <li><NavLink to='/' className={color + ' btn btn-floating lighten-1'}>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(thumbnailColor(SignedInLinks));","export const signIn = (credentials) => {\r\n  return(dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: \"LOGIN_SUCCESS\"})\r\n    }).catch((err) => {\r\n      dispatch({type: \"LOGIN_ERROR\", err})\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut()\r\n      .then(() => {\r\n        dispatch({type: 'SIGNOUT_SUCCESS'})\r\n      })\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return(dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((res) => {\r\n      return firestore.collection('users').doc(res.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err })\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/signup'>Signup</NavLink></li>\r\n      <li><NavLink to='/signin'>Log In</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SinedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-action grey lighten-4\">\r\n          <span className=\"card-title\">Notifications</span>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <ul className='notifications'>\r\n            { notifications && notifications.map(noti => {\r\n                return (\r\n                  <li key={noti.id}>\r\n                    <span className=\"pink-text\">{noti.user} </span>\r\n                    <span>{noti.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(noti.time.toDate()).fromNow()}\r\n                    </div>\r\n                    <br/>\r\n                  </li>\r\n                )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\"><blockquote>{project.title}</blockquote></span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      }) }\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nclass ProjectDetails extends Component {\r\n  render() {\r\n    const { project, auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if(project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\"><blockquote>{ project.title }\r\n                <Link to={{\r\n                  pathname: '/delete',\r\n                  projectId: `${this.props.match.params.id}`,\r\n                  authorId: `${project.authorId}`\r\n                }}> \r\n                  <i className='material-icons right black-text'>close</i>\r\n                </Link>\r\n                <Link to={{\r\n                  pathname: '/update',\r\n                  authorId: `${project.authorId}`,\r\n                  projectId: `${this.props.match.params.id}`,\r\n                  projectTitle: `${project.title}`,\r\n                  projectContent: `${project.content}` }}>\r\n                  <i className='material-icons right black-text'>create</i>\r\n                </Link>\r\n              </blockquote></span>\r\n              <p>{ project.content }</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>Posted by { project.authorFirstName }, { project.authorLastName }</div>\r\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else { \r\n      return (\r\n        <div className=\"container center\">\r\n          <p>Loading Project...</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails)\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { deleteProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass DeleteProject extends Component {\r\n  state = {\r\n    userId: this.props.auth.email,\r\n    userPassword: '',\r\n    docId: this.props.location.projectId\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      userPassword: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.deleteProject(this.state, this.props);\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signIn' />\r\n    if(auth.uid !== this.props.location.authorId) return (\r\n      <div className=\"container section\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">삭제 권한이 없습니다</span>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>해당 포스트 게시자만 수정 및 삭제가 가능합니다</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Enter your Password</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Delete Project</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteProject: (project, ownProps) => { dispatch(deleteProject(project, ownProps)) }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([\r\n    { collection : 'projects' }\r\n  ])\r\n)(DeleteProject);","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // do some ASYNC CALL to DATABASE(= Firebase)\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n      dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n    })  \r\n  }\r\n};\r\n\r\nexport const deleteProject = (project, ownProps) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      project.userId,\r\n      project.userPassword\r\n    ).then(() => {\r\n      firestore.collection('projects').doc(project.docId).delete();\r\n    }).then(() => {\r\n      dispatch({type: 'DELETE_PROJECT', project})\r\n    }).then(() => {\r\n      ownProps.history.push('/');\r\n    }).catch((err) => {\r\n      dispatch({type: 'DELETE_PROJECT_ERROR', err})\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const firebase = getFirebase();\r\n    firestore.collection('projects').doc(project.docId).update({\r\n      content: `${project.content}`,\r\n      title: `${project.title}`,\r\n      updatedAt: firebase.firestore.FieldValue.serverTimestamp()\r\n    }).then(() => {\r\n      dispatch({type: 'UPDATE_PROJECT', project})\r\n    }).catch((err) => {\r\n      dispatch({type: 'UPDATE_PROJECT_ERROR', err})\r\n    })\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { updateProject } from '../../store/actions/projectActions';\r\n\r\n\r\nclass UpdateProject extends Component {\r\n  state = {\r\n    title: this.props.location.projectTitle,\r\n    content: this.props.location.projectContent,\r\n    docId: this.props.location.projectId\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.updateProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { auth, project } = this.props;\r\n    const checkActiveLabel = this.state ? 'active' : null;\r\n\r\n    if(!auth.uid) return <Redirect to='/signin' />  \r\n    if(auth.uid === project.authorId) {\r\n      return (\r\n        <div className='container'>\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Update this Project</h5>\r\n            <div className=\"input-field\">\r\n              <label className={checkActiveLabel} htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" id='title' onChange={this.handleChange} value={this.state.title}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label className={checkActiveLabel} htmlFor=\"content\">Project Content</label>\r\n              <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} value={this.state.content}></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container section\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">수정 권한이 없습니다</span>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>해당 포스트 게시자만 수정 및 삭제가 가능합니다</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.location.projectId;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateProject: (project) => { dispatch(updateProject(project)) }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(UpdateProject);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Log In</button>\r\n            <div className=\"red-text center\">{ authError ? <p>{authError}</p> : null }</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {      \r\n  return {    // store에 저장된 값만 Props로 담아와서 사용할 것 인지\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {    \r\n  return {    // store에 삭제, 추가와 같은 별도의 action을 Props로 담아와서 dispatch 할 것 인지\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authAction';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign UP</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">firstName</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">lastName</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">{ authError ? <p>{authError}</p> : null }</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth         // firestore DB에 저장된 값은 아니므로 firestoreConnect 함수 X\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //deletePost: (id) => { dispatch({type: 'DELETE_POST', id:id}) }\r\n    createProject: (project) => { dispatch(createProject(project)) }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport DeleteProject from './components/projects/DeleteProject';\nimport UpdateProject from './components/projects/UpdateProject';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} /> \n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n          <Route path='/delete/' component={DeleteProject} />\n          <Route path='/update/' component={UpdateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\nconst authReducer = (state= initState, action) => {\r\n  switch(action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('log in failed')\r\n      return {...state, authError: 'Login Failed'}\r\n    \r\n    case 'LOGIN_SUCCESS':\r\n      console.log('log in');\r\n      return {...state, authError: null}\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n      \r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {...state, authError: null}\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {...state, authError: action.err.message}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'help others', content: 'blah blah'},\r\n    {id: '2', title: 'collect others', content: 'blah blah'},\r\n    {id: '3', title: 'kill others', content: 'blah blah'}\r\n  ]\r\n}\r\nconst projectReducer = (state= initState, action) => {\r\n  switch(action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('create project', action.project);\r\n      return state;\r\n\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n\r\n    case 'UPDATE_PROJECT':\r\n      console.log('update project', action.project);\r\n      return state;\r\n\r\n    case 'UPDATE_PROJECT_ERROR':\r\n      console.log('update project error', action.err);\r\n      return state;\r\n\r\n    case 'DELETE_PROJECT':\r\n      console.log('delete project', action.project);\r\n      return state;\r\n\r\n    case 'DELETE_PROJECT_ERROR':\r\n      console.log('delete project error', action.err);\r\n      alert('wrong password!')\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyB8y9zOAvp8FxC5xUzUXJaXviPMAWl1oK8\",\r\n  authDomain: \"marioplan-app-9bfcc.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-app-9bfcc.firebaseio.com\",\r\n  projectId: \"marioplan-app-9bfcc\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"747523256325\",\r\n  appId: \"1:747523256325:web:184302a146f5c44d\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true})\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n});\n\n"],"sourceRoot":""}